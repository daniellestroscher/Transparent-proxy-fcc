{
  "language": "Solidity",
  "sources": {
    "contracts/Box.sol": {
      "content": "//Implementation Contract (Logic)\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n\ncontract Box {\n  uint256 internal value; //storage slot 0\n\n  event ValueChanged(uint256 newValue);\n\n  function store(uint256 newValue) public {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  function retrieve() public view returns (uint256) {\n    return value;\n  }\n\n  function version() public pure returns (uint256) {\n    return 1;\n  }\n\n\n}\n"
    },
    "contracts/BoxV2.sol": {
      "content": "//Implementation Contract (Logic)\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract BoxV2 {\n  uint256 internal value; //storage slot 0\n\n  event ValueChanged(uint256 newValue);\n\n  function store(uint256 newValue) public {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  function retrieve() public view returns (uint256) {\n    return value;\n  }\n\n  function version() public pure returns (uint256) {\n    return 2;\n  }\n\n  function increment() public {\n    value = value + 1;\n    emit ValueChanged(value);\n  }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}